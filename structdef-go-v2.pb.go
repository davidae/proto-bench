// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: structdef-go-v2.proto

package protobench

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TypeV2 int32

const (
	TypeV2_TYPEV2_UNSPECIFIED TypeV2 = 0
	TypeV2_TYPEV2_R           TypeV2 = 1
	TypeV2_TYPEV2_S           TypeV2 = 2
)

// Enum value maps for TypeV2.
var (
	TypeV2_name = map[int32]string{
		0: "TYPEV2_UNSPECIFIED",
		1: "TYPEV2_R",
		2: "TYPEV2_S",
	}
	TypeV2_value = map[string]int32{
		"TYPEV2_UNSPECIFIED": 0,
		"TYPEV2_R":           1,
		"TYPEV2_S":           2,
	}
)

func (x TypeV2) Enum() *TypeV2 {
	p := new(TypeV2)
	*p = x
	return p
}

func (x TypeV2) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TypeV2) Descriptor() protoreflect.EnumDescriptor {
	return file_structdef_go_v2_proto_enumTypes[0].Descriptor()
}

func (TypeV2) Type() protoreflect.EnumType {
	return &file_structdef_go_v2_proto_enumTypes[0]
}

func (x TypeV2) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TypeV2.Descriptor instead.
func (TypeV2) EnumDescriptor() ([]byte, []int) {
	return file_structdef_go_v2_proto_rawDescGZIP(), []int{0}
}

type GoV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BirthDay int64   `protobuf:"varint,2,opt,name=birthDay,proto3" json:"birthDay,omitempty"`
	Phone    string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Siblings int32   `protobuf:"varint,4,opt,name=siblings,proto3" json:"siblings,omitempty"`
	Spouse   bool    `protobuf:"varint,5,opt,name=spouse,proto3" json:"spouse,omitempty"`
	Money    float64 `protobuf:"fixed64,6,opt,name=money,proto3" json:"money,omitempty"`
	Type     TypeV2  `protobuf:"varint,7,opt,name=type,proto3,enum=protobench.TypeV2" json:"type,omitempty"`
	// Types that are assignable to Values:
	//	*GoV2_ValueS
	//	*GoV2_ValueI
	//	*GoV2_ValueD
	Values  isGoV2_Values `protobuf_oneof:"values"`
	Address *AddressV2    `protobuf:"bytes,11,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *GoV2) Reset() {
	*x = GoV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structdef_go_v2_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GoV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GoV2) ProtoMessage() {}

func (x *GoV2) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_go_v2_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GoV2.ProtoReflect.Descriptor instead.
func (*GoV2) Descriptor() ([]byte, []int) {
	return file_structdef_go_v2_proto_rawDescGZIP(), []int{0}
}

func (x *GoV2) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GoV2) GetBirthDay() int64 {
	if x != nil {
		return x.BirthDay
	}
	return 0
}

func (x *GoV2) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GoV2) GetSiblings() int32 {
	if x != nil {
		return x.Siblings
	}
	return 0
}

func (x *GoV2) GetSpouse() bool {
	if x != nil {
		return x.Spouse
	}
	return false
}

func (x *GoV2) GetMoney() float64 {
	if x != nil {
		return x.Money
	}
	return 0
}

func (x *GoV2) GetType() TypeV2 {
	if x != nil {
		return x.Type
	}
	return TypeV2_TYPEV2_UNSPECIFIED
}

func (m *GoV2) GetValues() isGoV2_Values {
	if m != nil {
		return m.Values
	}
	return nil
}

func (x *GoV2) GetValueS() string {
	if x, ok := x.GetValues().(*GoV2_ValueS); ok {
		return x.ValueS
	}
	return ""
}

func (x *GoV2) GetValueI() int32 {
	if x, ok := x.GetValues().(*GoV2_ValueI); ok {
		return x.ValueI
	}
	return 0
}

func (x *GoV2) GetValueD() float64 {
	if x, ok := x.GetValues().(*GoV2_ValueD); ok {
		return x.ValueD
	}
	return 0
}

func (x *GoV2) GetAddress() *AddressV2 {
	if x != nil {
		return x.Address
	}
	return nil
}

type isGoV2_Values interface {
	isGoV2_Values()
}

type GoV2_ValueS struct {
	ValueS string `protobuf:"bytes,8,opt,name=value_s,json=valueS,proto3,oneof"`
}

type GoV2_ValueI struct {
	ValueI int32 `protobuf:"varint,9,opt,name=value_i,json=valueI,proto3,oneof"`
}

type GoV2_ValueD struct {
	ValueD float64 `protobuf:"fixed64,10,opt,name=value_d,json=valueD,proto3,oneof"`
}

func (*GoV2_ValueS) isGoV2_Values() {}

func (*GoV2_ValueI) isGoV2_Values() {}

func (*GoV2_ValueD) isGoV2_Values() {}

type AddressV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Street   string    `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	Number   int32     `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	PostCode int32     `protobuf:"varint,3,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	Floor    int32     `protobuf:"varint,4,opt,name=floor,proto3" json:"floor,omitempty"`
	Random   *RandomV2 `protobuf:"bytes,5,opt,name=random,proto3" json:"random,omitempty"`
}

func (x *AddressV2) Reset() {
	*x = AddressV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structdef_go_v2_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressV2) ProtoMessage() {}

func (x *AddressV2) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_go_v2_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressV2.ProtoReflect.Descriptor instead.
func (*AddressV2) Descriptor() ([]byte, []int) {
	return file_structdef_go_v2_proto_rawDescGZIP(), []int{1}
}

func (x *AddressV2) GetStreet() string {
	if x != nil {
		return x.Street
	}
	return ""
}

func (x *AddressV2) GetNumber() int32 {
	if x != nil {
		return x.Number
	}
	return 0
}

func (x *AddressV2) GetPostCode() int32 {
	if x != nil {
		return x.PostCode
	}
	return 0
}

func (x *AddressV2) GetFloor() int32 {
	if x != nil {
		return x.Floor
	}
	return 0
}

func (x *AddressV2) GetRandom() *RandomV2 {
	if x != nil {
		return x.Random
	}
	return nil
}

type RandomV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldA       string          `protobuf:"bytes,1,opt,name=FieldA,proto3" json:"FieldA,omitempty"`
	FieldB       string          `protobuf:"bytes,2,opt,name=FieldB,proto3" json:"FieldB,omitempty"`
	FieldC       string          `protobuf:"bytes,3,opt,name=FieldC,proto3" json:"FieldC,omitempty"`
	FieldD       string          `protobuf:"bytes,4,opt,name=FieldD,proto3" json:"FieldD,omitempty"`
	FieldE       string          `protobuf:"bytes,5,opt,name=FieldE,proto3" json:"FieldE,omitempty"`
	FieldF       string          `protobuf:"bytes,6,opt,name=FieldF,proto3" json:"FieldF,omitempty"`
	FielG        string          `protobuf:"bytes,7,opt,name=FielG,proto3" json:"FielG,omitempty"`
	FieldH       string          `protobuf:"bytes,8,opt,name=FieldH,proto3" json:"FieldH,omitempty"`
	FieldI       string          `protobuf:"bytes,9,opt,name=FieldI,proto3" json:"FieldI,omitempty"`
	FieldJ       string          `protobuf:"bytes,10,opt,name=FieldJ,proto3" json:"FieldJ,omitempty"`
	FieldK       int64           `protobuf:"varint,11,opt,name=FieldK,proto3" json:"FieldK,omitempty"`
	FieldL       int64           `protobuf:"varint,12,opt,name=FieldL,proto3" json:"FieldL,omitempty"`
	FieldM       int64           `protobuf:"varint,13,opt,name=FieldM,proto3" json:"FieldM,omitempty"`
	FieldN       int64           `protobuf:"varint,14,opt,name=FieldN,proto3" json:"FieldN,omitempty"`
	FieldO       string          `protobuf:"bytes,15,opt,name=FieldO,proto3" json:"FieldO,omitempty"`
	FieldP       string          `protobuf:"bytes,16,opt,name=FieldP,proto3" json:"FieldP,omitempty"`
	FieldQ       int32           `protobuf:"varint,17,opt,name=FieldQ,proto3" json:"FieldQ,omitempty"`
	FieldR       string          `protobuf:"bytes,18,opt,name=FieldR,proto3" json:"FieldR,omitempty"`
	FieldS       string          `protobuf:"bytes,19,opt,name=FieldS,proto3" json:"FieldS,omitempty"`
	FieldT       string          `protobuf:"bytes,20,opt,name=FieldT,proto3" json:"FieldT,omitempty"`
	FieldU       int32           `protobuf:"varint,21,opt,name=FieldU,proto3" json:"FieldU,omitempty"`
	FieldV       int32           `protobuf:"varint,22,opt,name=FieldV,proto3" json:"FieldV,omitempty"`
	FieldW       int32           `protobuf:"varint,23,opt,name=FieldW,proto3" json:"FieldW,omitempty"`
	FieldX       int32           `protobuf:"varint,24,opt,name=FieldX,proto3" json:"FieldX,omitempty"`
	FieldY       string          `protobuf:"bytes,25,opt,name=FieldY,proto3" json:"FieldY,omitempty"`
	FieldZ       bool            `protobuf:"varint,26,opt,name=FieldZ,proto3" json:"FieldZ,omitempty"`
	NestedRandom *NestedRandomV2 `protobuf:"bytes,34,opt,name=nested_random,json=nestedRandom,proto3" json:"nested_random,omitempty"`
}

func (x *RandomV2) Reset() {
	*x = RandomV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structdef_go_v2_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RandomV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RandomV2) ProtoMessage() {}

func (x *RandomV2) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_go_v2_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RandomV2.ProtoReflect.Descriptor instead.
func (*RandomV2) Descriptor() ([]byte, []int) {
	return file_structdef_go_v2_proto_rawDescGZIP(), []int{2}
}

func (x *RandomV2) GetFieldA() string {
	if x != nil {
		return x.FieldA
	}
	return ""
}

func (x *RandomV2) GetFieldB() string {
	if x != nil {
		return x.FieldB
	}
	return ""
}

func (x *RandomV2) GetFieldC() string {
	if x != nil {
		return x.FieldC
	}
	return ""
}

func (x *RandomV2) GetFieldD() string {
	if x != nil {
		return x.FieldD
	}
	return ""
}

func (x *RandomV2) GetFieldE() string {
	if x != nil {
		return x.FieldE
	}
	return ""
}

func (x *RandomV2) GetFieldF() string {
	if x != nil {
		return x.FieldF
	}
	return ""
}

func (x *RandomV2) GetFielG() string {
	if x != nil {
		return x.FielG
	}
	return ""
}

func (x *RandomV2) GetFieldH() string {
	if x != nil {
		return x.FieldH
	}
	return ""
}

func (x *RandomV2) GetFieldI() string {
	if x != nil {
		return x.FieldI
	}
	return ""
}

func (x *RandomV2) GetFieldJ() string {
	if x != nil {
		return x.FieldJ
	}
	return ""
}

func (x *RandomV2) GetFieldK() int64 {
	if x != nil {
		return x.FieldK
	}
	return 0
}

func (x *RandomV2) GetFieldL() int64 {
	if x != nil {
		return x.FieldL
	}
	return 0
}

func (x *RandomV2) GetFieldM() int64 {
	if x != nil {
		return x.FieldM
	}
	return 0
}

func (x *RandomV2) GetFieldN() int64 {
	if x != nil {
		return x.FieldN
	}
	return 0
}

func (x *RandomV2) GetFieldO() string {
	if x != nil {
		return x.FieldO
	}
	return ""
}

func (x *RandomV2) GetFieldP() string {
	if x != nil {
		return x.FieldP
	}
	return ""
}

func (x *RandomV2) GetFieldQ() int32 {
	if x != nil {
		return x.FieldQ
	}
	return 0
}

func (x *RandomV2) GetFieldR() string {
	if x != nil {
		return x.FieldR
	}
	return ""
}

func (x *RandomV2) GetFieldS() string {
	if x != nil {
		return x.FieldS
	}
	return ""
}

func (x *RandomV2) GetFieldT() string {
	if x != nil {
		return x.FieldT
	}
	return ""
}

func (x *RandomV2) GetFieldU() int32 {
	if x != nil {
		return x.FieldU
	}
	return 0
}

func (x *RandomV2) GetFieldV() int32 {
	if x != nil {
		return x.FieldV
	}
	return 0
}

func (x *RandomV2) GetFieldW() int32 {
	if x != nil {
		return x.FieldW
	}
	return 0
}

func (x *RandomV2) GetFieldX() int32 {
	if x != nil {
		return x.FieldX
	}
	return 0
}

func (x *RandomV2) GetFieldY() string {
	if x != nil {
		return x.FieldY
	}
	return ""
}

func (x *RandomV2) GetFieldZ() bool {
	if x != nil {
		return x.FieldZ
	}
	return false
}

func (x *RandomV2) GetNestedRandom() *NestedRandomV2 {
	if x != nil {
		return x.NestedRandom
	}
	return nil
}

type NestedRandomV2 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FieldA string  `protobuf:"bytes,1,opt,name=FieldA,proto3" json:"FieldA,omitempty"`
	FieldB string  `protobuf:"bytes,2,opt,name=FieldB,proto3" json:"FieldB,omitempty"`
	FieldC string  `protobuf:"bytes,3,opt,name=FieldC,proto3" json:"FieldC,omitempty"`
	FieldD string  `protobuf:"bytes,4,opt,name=FieldD,proto3" json:"FieldD,omitempty"`
	FieldE string  `protobuf:"bytes,5,opt,name=FieldE,proto3" json:"FieldE,omitempty"`
	FieldF string  `protobuf:"bytes,6,opt,name=FieldF,proto3" json:"FieldF,omitempty"`
	FielG  float64 `protobuf:"fixed64,7,opt,name=FielG,proto3" json:"FielG,omitempty"`
	FieldH float64 `protobuf:"fixed64,8,opt,name=FieldH,proto3" json:"FieldH,omitempty"`
	FieldI float64 `protobuf:"fixed64,9,opt,name=FieldI,proto3" json:"FieldI,omitempty"`
	FieldJ float64 `protobuf:"fixed64,10,opt,name=FieldJ,proto3" json:"FieldJ,omitempty"`
	FieldK float64 `protobuf:"fixed64,11,opt,name=FieldK,proto3" json:"FieldK,omitempty"`
	FieldL float64 `protobuf:"fixed64,12,opt,name=FieldL,proto3" json:"FieldL,omitempty"`
	FieldM string  `protobuf:"bytes,13,opt,name=FieldM,proto3" json:"FieldM,omitempty"`
	FieldN string  `protobuf:"bytes,14,opt,name=FieldN,proto3" json:"FieldN,omitempty"`
	FieldO string  `protobuf:"bytes,15,opt,name=FieldO,proto3" json:"FieldO,omitempty"`
	FieldP string  `protobuf:"bytes,16,opt,name=FieldP,proto3" json:"FieldP,omitempty"`
	FieldQ int64   `protobuf:"varint,17,opt,name=FieldQ,proto3" json:"FieldQ,omitempty"`
	FieldR int64   `protobuf:"varint,18,opt,name=FieldR,proto3" json:"FieldR,omitempty"`
	FieldS int64   `protobuf:"varint,19,opt,name=FieldS,proto3" json:"FieldS,omitempty"`
	FieldT int64   `protobuf:"varint,20,opt,name=FieldT,proto3" json:"FieldT,omitempty"`
	FieldU string  `protobuf:"bytes,21,opt,name=FieldU,proto3" json:"FieldU,omitempty"`
	FieldV string  `protobuf:"bytes,22,opt,name=FieldV,proto3" json:"FieldV,omitempty"`
	FieldW string  `protobuf:"bytes,23,opt,name=FieldW,proto3" json:"FieldW,omitempty"`
	FieldX string  `protobuf:"bytes,24,opt,name=FieldX,proto3" json:"FieldX,omitempty"`
	FieldY bool    `protobuf:"varint,25,opt,name=FieldY,proto3" json:"FieldY,omitempty"`
	FieldZ bool    `protobuf:"varint,26,opt,name=FieldZ,proto3" json:"FieldZ,omitempty"`
}

func (x *NestedRandomV2) Reset() {
	*x = NestedRandomV2{}
	if protoimpl.UnsafeEnabled {
		mi := &file_structdef_go_v2_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NestedRandomV2) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NestedRandomV2) ProtoMessage() {}

func (x *NestedRandomV2) ProtoReflect() protoreflect.Message {
	mi := &file_structdef_go_v2_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NestedRandomV2.ProtoReflect.Descriptor instead.
func (*NestedRandomV2) Descriptor() ([]byte, []int) {
	return file_structdef_go_v2_proto_rawDescGZIP(), []int{3}
}

func (x *NestedRandomV2) GetFieldA() string {
	if x != nil {
		return x.FieldA
	}
	return ""
}

func (x *NestedRandomV2) GetFieldB() string {
	if x != nil {
		return x.FieldB
	}
	return ""
}

func (x *NestedRandomV2) GetFieldC() string {
	if x != nil {
		return x.FieldC
	}
	return ""
}

func (x *NestedRandomV2) GetFieldD() string {
	if x != nil {
		return x.FieldD
	}
	return ""
}

func (x *NestedRandomV2) GetFieldE() string {
	if x != nil {
		return x.FieldE
	}
	return ""
}

func (x *NestedRandomV2) GetFieldF() string {
	if x != nil {
		return x.FieldF
	}
	return ""
}

func (x *NestedRandomV2) GetFielG() float64 {
	if x != nil {
		return x.FielG
	}
	return 0
}

func (x *NestedRandomV2) GetFieldH() float64 {
	if x != nil {
		return x.FieldH
	}
	return 0
}

func (x *NestedRandomV2) GetFieldI() float64 {
	if x != nil {
		return x.FieldI
	}
	return 0
}

func (x *NestedRandomV2) GetFieldJ() float64 {
	if x != nil {
		return x.FieldJ
	}
	return 0
}

func (x *NestedRandomV2) GetFieldK() float64 {
	if x != nil {
		return x.FieldK
	}
	return 0
}

func (x *NestedRandomV2) GetFieldL() float64 {
	if x != nil {
		return x.FieldL
	}
	return 0
}

func (x *NestedRandomV2) GetFieldM() string {
	if x != nil {
		return x.FieldM
	}
	return ""
}

func (x *NestedRandomV2) GetFieldN() string {
	if x != nil {
		return x.FieldN
	}
	return ""
}

func (x *NestedRandomV2) GetFieldO() string {
	if x != nil {
		return x.FieldO
	}
	return ""
}

func (x *NestedRandomV2) GetFieldP() string {
	if x != nil {
		return x.FieldP
	}
	return ""
}

func (x *NestedRandomV2) GetFieldQ() int64 {
	if x != nil {
		return x.FieldQ
	}
	return 0
}

func (x *NestedRandomV2) GetFieldR() int64 {
	if x != nil {
		return x.FieldR
	}
	return 0
}

func (x *NestedRandomV2) GetFieldS() int64 {
	if x != nil {
		return x.FieldS
	}
	return 0
}

func (x *NestedRandomV2) GetFieldT() int64 {
	if x != nil {
		return x.FieldT
	}
	return 0
}

func (x *NestedRandomV2) GetFieldU() string {
	if x != nil {
		return x.FieldU
	}
	return ""
}

func (x *NestedRandomV2) GetFieldV() string {
	if x != nil {
		return x.FieldV
	}
	return ""
}

func (x *NestedRandomV2) GetFieldW() string {
	if x != nil {
		return x.FieldW
	}
	return ""
}

func (x *NestedRandomV2) GetFieldX() string {
	if x != nil {
		return x.FieldX
	}
	return ""
}

func (x *NestedRandomV2) GetFieldY() bool {
	if x != nil {
		return x.FieldY
	}
	return false
}

func (x *NestedRandomV2) GetFieldZ() bool {
	if x != nil {
		return x.FieldZ
	}
	return false
}

var File_structdef_go_v2_proto protoreflect.FileDescriptor

var file_structdef_go_v2_proto_rawDesc = []byte{
	0x0a, 0x15, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x64, 0x65, 0x66, 0x2d, 0x67, 0x6f, 0x2d, 0x76,
	0x32, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x22, 0xca, 0x02, 0x0a, 0x04, 0x47, 0x6f, 0x56, 0x32, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x62, 0x69, 0x72, 0x74, 0x68, 0x44, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x69, 0x62, 0x6c, 0x69, 0x6e, 0x67, 0x73, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06,
	0x73, 0x70, 0x6f, 0x75, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x6d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x26, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x56, 0x32, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x19, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x73, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x53, 0x12,
	0x19, 0x0a, 0x07, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x69, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05,
	0x48, 0x00, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x49, 0x12, 0x19, 0x0a, 0x07, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x5f, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x01, 0x48, 0x00, 0x52, 0x06, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x44, 0x12, 0x2f, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x65,
	0x6e, 0x63, 0x68, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x32, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x42, 0x08, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73,
	0x22, 0x9c, 0x01, 0x0a, 0x09, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x56, 0x32, 0x12, 0x16,
	0x0a, 0x06, 0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x73, 0x74, 0x72, 0x65, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x1b,
	0x0a, 0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6c, 0x6f, 0x6f, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x66, 0x6c, 0x6f, 0x6f,
	0x72, 0x12, 0x2c, 0x0a, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x52,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x56, 0x32, 0x52, 0x06, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x22,
	0xb9, 0x05, 0x0a, 0x08, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x43, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x12, 0x14, 0x0a, 0x05,
	0x46, 0x69, 0x65, 0x6c, 0x47, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x46, 0x69, 0x65,
	0x6c, 0x47, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x49, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x49, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4a, 0x18, 0x0a, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4a, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4b, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4d, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x51, 0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x51, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x18, 0x12, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x53, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x18, 0x14, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x55, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x55, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x57, 0x18, 0x17, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x57, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x58, 0x18, 0x18, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x58, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x59, 0x18, 0x19, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x59, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x5a, 0x18, 0x1a, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x5a, 0x12, 0x3f, 0x0a, 0x0d, 0x6e, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x18, 0x22, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x2e, 0x4e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x56, 0x32, 0x52, 0x0c, 0x6e,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x22, 0xfe, 0x04, 0x0a, 0x0e,
	0x4e, 0x65, 0x73, 0x74, 0x65, 0x64, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x56, 0x32, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x41, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x41, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x42, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x43, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x44, 0x12, 0x16,
	0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x45, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x46,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x46, 0x12, 0x14,
	0x0a, 0x05, 0x46, 0x69, 0x65, 0x6c, 0x47, 0x18, 0x07, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x46,
	0x69, 0x65, 0x6c, 0x47, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x48, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x49, 0x18, 0x09, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x49, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4a, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4a, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4b, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4b, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x01, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4c, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4d, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4d, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x4e, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x4f, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x4f, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x50, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x51, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x51, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x18, 0x12,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x52, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x53, 0x18, 0x13, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x53, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x54, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x55, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x55, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x18, 0x16,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x56, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x57, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x57, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x58, 0x18, 0x18,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x58, 0x12, 0x16, 0x0a, 0x06,
	0x46, 0x69, 0x65, 0x6c, 0x64, 0x59, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x59, 0x12, 0x16, 0x0a, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x5a, 0x18, 0x1a,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x5a, 0x2a, 0x3c, 0x0a, 0x06,
	0x54, 0x79, 0x70, 0x65, 0x56, 0x32, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x59, 0x50, 0x45, 0x56, 0x32,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0c,
	0x0a, 0x08, 0x54, 0x59, 0x50, 0x45, 0x56, 0x32, 0x5f, 0x52, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x59, 0x50, 0x45, 0x56, 0x32, 0x5f, 0x53, 0x10, 0x02, 0x42, 0x2c, 0x5a, 0x2a, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6c, 0x65, 0x78, 0x73, 0x68, 0x74,
	0x69, 0x6e, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x3b, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x65, 0x6e, 0x63, 0x68, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_structdef_go_v2_proto_rawDescOnce sync.Once
	file_structdef_go_v2_proto_rawDescData = file_structdef_go_v2_proto_rawDesc
)

func file_structdef_go_v2_proto_rawDescGZIP() []byte {
	file_structdef_go_v2_proto_rawDescOnce.Do(func() {
		file_structdef_go_v2_proto_rawDescData = protoimpl.X.CompressGZIP(file_structdef_go_v2_proto_rawDescData)
	})
	return file_structdef_go_v2_proto_rawDescData
}

var file_structdef_go_v2_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_structdef_go_v2_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_structdef_go_v2_proto_goTypes = []interface{}{
	(TypeV2)(0),            // 0: protobench.TypeV2
	(*GoV2)(nil),           // 1: protobench.GoV2
	(*AddressV2)(nil),      // 2: protobench.AddressV2
	(*RandomV2)(nil),       // 3: protobench.RandomV2
	(*NestedRandomV2)(nil), // 4: protobench.NestedRandomV2
}
var file_structdef_go_v2_proto_depIdxs = []int32{
	0, // 0: protobench.GoV2.type:type_name -> protobench.TypeV2
	2, // 1: protobench.GoV2.address:type_name -> protobench.AddressV2
	3, // 2: protobench.AddressV2.random:type_name -> protobench.RandomV2
	4, // 3: protobench.RandomV2.nested_random:type_name -> protobench.NestedRandomV2
	4, // [4:4] is the sub-list for method output_type
	4, // [4:4] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_structdef_go_v2_proto_init() }
func file_structdef_go_v2_proto_init() {
	if File_structdef_go_v2_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_structdef_go_v2_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GoV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structdef_go_v2_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structdef_go_v2_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RandomV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_structdef_go_v2_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NestedRandomV2); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_structdef_go_v2_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*GoV2_ValueS)(nil),
		(*GoV2_ValueI)(nil),
		(*GoV2_ValueD)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_structdef_go_v2_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_structdef_go_v2_proto_goTypes,
		DependencyIndexes: file_structdef_go_v2_proto_depIdxs,
		EnumInfos:         file_structdef_go_v2_proto_enumTypes,
		MessageInfos:      file_structdef_go_v2_proto_msgTypes,
	}.Build()
	File_structdef_go_v2_proto = out.File
	file_structdef_go_v2_proto_rawDesc = nil
	file_structdef_go_v2_proto_goTypes = nil
	file_structdef_go_v2_proto_depIdxs = nil
}
