// Code generated by protoc-gen-go. DO NOT EDIT.
// source: structdef-go-v1.proto

package protobench

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type TypeV1 int32

const (
	TypeV1_TYPEV1_UNSPECIFIED TypeV1 = 0
	TypeV1_TYPEV1_R           TypeV1 = 1
	TypeV1_TYPEV1_S           TypeV1 = 2
)

var TypeV1_name = map[int32]string{
	0: "TYPEV1_UNSPECIFIED",
	1: "TYPEV1_R",
	2: "TYPEV1_S",
}

var TypeV1_value = map[string]int32{
	"TYPEV1_UNSPECIFIED": 0,
	"TYPEV1_R":           1,
	"TYPEV1_S":           2,
}

func (x TypeV1) String() string {
	return proto.EnumName(TypeV1_name, int32(x))
}

func (TypeV1) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_9e762851f95667d1, []int{0}
}

type GoV1 struct {
	Name     string  `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	BirthDay int64   `protobuf:"varint,2,opt,name=birthDay,proto3" json:"birthDay,omitempty"`
	Phone    string  `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	Siblings int32   `protobuf:"varint,4,opt,name=siblings,proto3" json:"siblings,omitempty"`
	Spouse   bool    `protobuf:"varint,5,opt,name=spouse,proto3" json:"spouse,omitempty"`
	Money    float64 `protobuf:"fixed64,6,opt,name=money,proto3" json:"money,omitempty"`
	Type     TypeV1  `protobuf:"varint,7,opt,name=type,proto3,enum=protobench.TypeV1" json:"type,omitempty"`
	// Types that are valid to be assigned to Values:
	//	*GoV1_ValueS
	//	*GoV1_ValueI
	//	*GoV1_ValueD
	Values               isGoV1_Values `protobuf_oneof:"values"`
	Address              *AddressV1    `protobuf:"bytes,11,opt,name=Address,proto3" json:"Address,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *GoV1) Reset()         { *m = GoV1{} }
func (m *GoV1) String() string { return proto.CompactTextString(m) }
func (*GoV1) ProtoMessage()    {}
func (*GoV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e762851f95667d1, []int{0}
}

func (m *GoV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GoV1.Unmarshal(m, b)
}
func (m *GoV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GoV1.Marshal(b, m, deterministic)
}
func (m *GoV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GoV1.Merge(m, src)
}
func (m *GoV1) XXX_Size() int {
	return xxx_messageInfo_GoV1.Size(m)
}
func (m *GoV1) XXX_DiscardUnknown() {
	xxx_messageInfo_GoV1.DiscardUnknown(m)
}

var xxx_messageInfo_GoV1 proto.InternalMessageInfo

func (m *GoV1) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *GoV1) GetBirthDay() int64 {
	if m != nil {
		return m.BirthDay
	}
	return 0
}

func (m *GoV1) GetPhone() string {
	if m != nil {
		return m.Phone
	}
	return ""
}

func (m *GoV1) GetSiblings() int32 {
	if m != nil {
		return m.Siblings
	}
	return 0
}

func (m *GoV1) GetSpouse() bool {
	if m != nil {
		return m.Spouse
	}
	return false
}

func (m *GoV1) GetMoney() float64 {
	if m != nil {
		return m.Money
	}
	return 0
}

func (m *GoV1) GetType() TypeV1 {
	if m != nil {
		return m.Type
	}
	return TypeV1_TYPEV1_UNSPECIFIED
}

type isGoV1_Values interface {
	isGoV1_Values()
}

type GoV1_ValueS struct {
	ValueS string `protobuf:"bytes,8,opt,name=value_s,json=valueS,proto3,oneof"`
}

type GoV1_ValueI struct {
	ValueI int32 `protobuf:"varint,9,opt,name=value_i,json=valueI,proto3,oneof"`
}

type GoV1_ValueD struct {
	ValueD float64 `protobuf:"fixed64,10,opt,name=value_d,json=valueD,proto3,oneof"`
}

func (*GoV1_ValueS) isGoV1_Values() {}

func (*GoV1_ValueI) isGoV1_Values() {}

func (*GoV1_ValueD) isGoV1_Values() {}

func (m *GoV1) GetValues() isGoV1_Values {
	if m != nil {
		return m.Values
	}
	return nil
}

func (m *GoV1) GetValueS() string {
	if x, ok := m.GetValues().(*GoV1_ValueS); ok {
		return x.ValueS
	}
	return ""
}

func (m *GoV1) GetValueI() int32 {
	if x, ok := m.GetValues().(*GoV1_ValueI); ok {
		return x.ValueI
	}
	return 0
}

func (m *GoV1) GetValueD() float64 {
	if x, ok := m.GetValues().(*GoV1_ValueD); ok {
		return x.ValueD
	}
	return 0
}

func (m *GoV1) GetAddress() *AddressV1 {
	if m != nil {
		return m.Address
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*GoV1) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*GoV1_ValueS)(nil),
		(*GoV1_ValueI)(nil),
		(*GoV1_ValueD)(nil),
	}
}

type AddressV1 struct {
	Street               string    `protobuf:"bytes,1,opt,name=street,proto3" json:"street,omitempty"`
	Number               int32     `protobuf:"varint,2,opt,name=number,proto3" json:"number,omitempty"`
	PostCode             int32     `protobuf:"varint,3,opt,name=post_code,json=postCode,proto3" json:"post_code,omitempty"`
	Floor                int32     `protobuf:"varint,4,opt,name=floor,proto3" json:"floor,omitempty"`
	Random               *RandomV1 `protobuf:"bytes,5,opt,name=random,proto3" json:"random,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *AddressV1) Reset()         { *m = AddressV1{} }
func (m *AddressV1) String() string { return proto.CompactTextString(m) }
func (*AddressV1) ProtoMessage()    {}
func (*AddressV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e762851f95667d1, []int{1}
}

func (m *AddressV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_AddressV1.Unmarshal(m, b)
}
func (m *AddressV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_AddressV1.Marshal(b, m, deterministic)
}
func (m *AddressV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_AddressV1.Merge(m, src)
}
func (m *AddressV1) XXX_Size() int {
	return xxx_messageInfo_AddressV1.Size(m)
}
func (m *AddressV1) XXX_DiscardUnknown() {
	xxx_messageInfo_AddressV1.DiscardUnknown(m)
}

var xxx_messageInfo_AddressV1 proto.InternalMessageInfo

func (m *AddressV1) GetStreet() string {
	if m != nil {
		return m.Street
	}
	return ""
}

func (m *AddressV1) GetNumber() int32 {
	if m != nil {
		return m.Number
	}
	return 0
}

func (m *AddressV1) GetPostCode() int32 {
	if m != nil {
		return m.PostCode
	}
	return 0
}

func (m *AddressV1) GetFloor() int32 {
	if m != nil {
		return m.Floor
	}
	return 0
}

func (m *AddressV1) GetRandom() *RandomV1 {
	if m != nil {
		return m.Random
	}
	return nil
}

type RandomV1 struct {
	FieldA               string          `protobuf:"bytes,1,opt,name=FieldA,proto3" json:"FieldA,omitempty"`
	FieldB               string          `protobuf:"bytes,2,opt,name=FieldB,proto3" json:"FieldB,omitempty"`
	FieldC               string          `protobuf:"bytes,3,opt,name=FieldC,proto3" json:"FieldC,omitempty"`
	FieldD               string          `protobuf:"bytes,4,opt,name=FieldD,proto3" json:"FieldD,omitempty"`
	FieldE               string          `protobuf:"bytes,5,opt,name=FieldE,proto3" json:"FieldE,omitempty"`
	FieldF               string          `protobuf:"bytes,6,opt,name=FieldF,proto3" json:"FieldF,omitempty"`
	FielG                string          `protobuf:"bytes,7,opt,name=FielG,proto3" json:"FielG,omitempty"`
	FieldH               string          `protobuf:"bytes,8,opt,name=FieldH,proto3" json:"FieldH,omitempty"`
	FieldI               string          `protobuf:"bytes,9,opt,name=FieldI,proto3" json:"FieldI,omitempty"`
	FieldJ               string          `protobuf:"bytes,10,opt,name=FieldJ,proto3" json:"FieldJ,omitempty"`
	FieldK               int64           `protobuf:"varint,11,opt,name=FieldK,proto3" json:"FieldK,omitempty"`
	FieldL               int64           `protobuf:"varint,12,opt,name=FieldL,proto3" json:"FieldL,omitempty"`
	FieldM               int64           `protobuf:"varint,13,opt,name=FieldM,proto3" json:"FieldM,omitempty"`
	FieldN               int64           `protobuf:"varint,14,opt,name=FieldN,proto3" json:"FieldN,omitempty"`
	FieldO               string          `protobuf:"bytes,15,opt,name=FieldO,proto3" json:"FieldO,omitempty"`
	FieldP               string          `protobuf:"bytes,16,opt,name=FieldP,proto3" json:"FieldP,omitempty"`
	FieldQ               int32           `protobuf:"varint,17,opt,name=FieldQ,proto3" json:"FieldQ,omitempty"`
	FieldR               string          `protobuf:"bytes,18,opt,name=FieldR,proto3" json:"FieldR,omitempty"`
	FieldS               string          `protobuf:"bytes,19,opt,name=FieldS,proto3" json:"FieldS,omitempty"`
	FieldT               string          `protobuf:"bytes,20,opt,name=FieldT,proto3" json:"FieldT,omitempty"`
	FieldU               int32           `protobuf:"varint,21,opt,name=FieldU,proto3" json:"FieldU,omitempty"`
	FieldV               int32           `protobuf:"varint,22,opt,name=FieldV,proto3" json:"FieldV,omitempty"`
	FieldW               int32           `protobuf:"varint,23,opt,name=FieldW,proto3" json:"FieldW,omitempty"`
	FieldX               int32           `protobuf:"varint,24,opt,name=FieldX,proto3" json:"FieldX,omitempty"`
	FieldY               string          `protobuf:"bytes,25,opt,name=FieldY,proto3" json:"FieldY,omitempty"`
	FieldZ               bool            `protobuf:"varint,26,opt,name=FieldZ,proto3" json:"FieldZ,omitempty"`
	NestedRandom         *NestedRandomV1 `protobuf:"bytes,34,opt,name=nested_random,json=nestedRandom,proto3" json:"nested_random,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *RandomV1) Reset()         { *m = RandomV1{} }
func (m *RandomV1) String() string { return proto.CompactTextString(m) }
func (*RandomV1) ProtoMessage()    {}
func (*RandomV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e762851f95667d1, []int{2}
}

func (m *RandomV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RandomV1.Unmarshal(m, b)
}
func (m *RandomV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RandomV1.Marshal(b, m, deterministic)
}
func (m *RandomV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RandomV1.Merge(m, src)
}
func (m *RandomV1) XXX_Size() int {
	return xxx_messageInfo_RandomV1.Size(m)
}
func (m *RandomV1) XXX_DiscardUnknown() {
	xxx_messageInfo_RandomV1.DiscardUnknown(m)
}

var xxx_messageInfo_RandomV1 proto.InternalMessageInfo

func (m *RandomV1) GetFieldA() string {
	if m != nil {
		return m.FieldA
	}
	return ""
}

func (m *RandomV1) GetFieldB() string {
	if m != nil {
		return m.FieldB
	}
	return ""
}

func (m *RandomV1) GetFieldC() string {
	if m != nil {
		return m.FieldC
	}
	return ""
}

func (m *RandomV1) GetFieldD() string {
	if m != nil {
		return m.FieldD
	}
	return ""
}

func (m *RandomV1) GetFieldE() string {
	if m != nil {
		return m.FieldE
	}
	return ""
}

func (m *RandomV1) GetFieldF() string {
	if m != nil {
		return m.FieldF
	}
	return ""
}

func (m *RandomV1) GetFielG() string {
	if m != nil {
		return m.FielG
	}
	return ""
}

func (m *RandomV1) GetFieldH() string {
	if m != nil {
		return m.FieldH
	}
	return ""
}

func (m *RandomV1) GetFieldI() string {
	if m != nil {
		return m.FieldI
	}
	return ""
}

func (m *RandomV1) GetFieldJ() string {
	if m != nil {
		return m.FieldJ
	}
	return ""
}

func (m *RandomV1) GetFieldK() int64 {
	if m != nil {
		return m.FieldK
	}
	return 0
}

func (m *RandomV1) GetFieldL() int64 {
	if m != nil {
		return m.FieldL
	}
	return 0
}

func (m *RandomV1) GetFieldM() int64 {
	if m != nil {
		return m.FieldM
	}
	return 0
}

func (m *RandomV1) GetFieldN() int64 {
	if m != nil {
		return m.FieldN
	}
	return 0
}

func (m *RandomV1) GetFieldO() string {
	if m != nil {
		return m.FieldO
	}
	return ""
}

func (m *RandomV1) GetFieldP() string {
	if m != nil {
		return m.FieldP
	}
	return ""
}

func (m *RandomV1) GetFieldQ() int32 {
	if m != nil {
		return m.FieldQ
	}
	return 0
}

func (m *RandomV1) GetFieldR() string {
	if m != nil {
		return m.FieldR
	}
	return ""
}

func (m *RandomV1) GetFieldS() string {
	if m != nil {
		return m.FieldS
	}
	return ""
}

func (m *RandomV1) GetFieldT() string {
	if m != nil {
		return m.FieldT
	}
	return ""
}

func (m *RandomV1) GetFieldU() int32 {
	if m != nil {
		return m.FieldU
	}
	return 0
}

func (m *RandomV1) GetFieldV() int32 {
	if m != nil {
		return m.FieldV
	}
	return 0
}

func (m *RandomV1) GetFieldW() int32 {
	if m != nil {
		return m.FieldW
	}
	return 0
}

func (m *RandomV1) GetFieldX() int32 {
	if m != nil {
		return m.FieldX
	}
	return 0
}

func (m *RandomV1) GetFieldY() string {
	if m != nil {
		return m.FieldY
	}
	return ""
}

func (m *RandomV1) GetFieldZ() bool {
	if m != nil {
		return m.FieldZ
	}
	return false
}

func (m *RandomV1) GetNestedRandom() *NestedRandomV1 {
	if m != nil {
		return m.NestedRandom
	}
	return nil
}

type NestedRandomV1 struct {
	FieldA               string   `protobuf:"bytes,1,opt,name=FieldA,proto3" json:"FieldA,omitempty"`
	FieldB               string   `protobuf:"bytes,2,opt,name=FieldB,proto3" json:"FieldB,omitempty"`
	FieldC               string   `protobuf:"bytes,3,opt,name=FieldC,proto3" json:"FieldC,omitempty"`
	FieldD               string   `protobuf:"bytes,4,opt,name=FieldD,proto3" json:"FieldD,omitempty"`
	FieldE               string   `protobuf:"bytes,5,opt,name=FieldE,proto3" json:"FieldE,omitempty"`
	FieldF               string   `protobuf:"bytes,6,opt,name=FieldF,proto3" json:"FieldF,omitempty"`
	FielG                float64  `protobuf:"fixed64,7,opt,name=FielG,proto3" json:"FielG,omitempty"`
	FieldH               float64  `protobuf:"fixed64,8,opt,name=FieldH,proto3" json:"FieldH,omitempty"`
	FieldI               float64  `protobuf:"fixed64,9,opt,name=FieldI,proto3" json:"FieldI,omitempty"`
	FieldJ               float64  `protobuf:"fixed64,10,opt,name=FieldJ,proto3" json:"FieldJ,omitempty"`
	FieldK               float64  `protobuf:"fixed64,11,opt,name=FieldK,proto3" json:"FieldK,omitempty"`
	FieldL               float64  `protobuf:"fixed64,12,opt,name=FieldL,proto3" json:"FieldL,omitempty"`
	FieldM               string   `protobuf:"bytes,13,opt,name=FieldM,proto3" json:"FieldM,omitempty"`
	FieldN               string   `protobuf:"bytes,14,opt,name=FieldN,proto3" json:"FieldN,omitempty"`
	FieldO               string   `protobuf:"bytes,15,opt,name=FieldO,proto3" json:"FieldO,omitempty"`
	FieldP               string   `protobuf:"bytes,16,opt,name=FieldP,proto3" json:"FieldP,omitempty"`
	FieldQ               int64    `protobuf:"varint,17,opt,name=FieldQ,proto3" json:"FieldQ,omitempty"`
	FieldR               int64    `protobuf:"varint,18,opt,name=FieldR,proto3" json:"FieldR,omitempty"`
	FieldS               int64    `protobuf:"varint,19,opt,name=FieldS,proto3" json:"FieldS,omitempty"`
	FieldT               int64    `protobuf:"varint,20,opt,name=FieldT,proto3" json:"FieldT,omitempty"`
	FieldU               string   `protobuf:"bytes,21,opt,name=FieldU,proto3" json:"FieldU,omitempty"`
	FieldV               string   `protobuf:"bytes,22,opt,name=FieldV,proto3" json:"FieldV,omitempty"`
	FieldW               string   `protobuf:"bytes,23,opt,name=FieldW,proto3" json:"FieldW,omitempty"`
	FieldX               string   `protobuf:"bytes,24,opt,name=FieldX,proto3" json:"FieldX,omitempty"`
	FieldY               bool     `protobuf:"varint,25,opt,name=FieldY,proto3" json:"FieldY,omitempty"`
	FieldZ               bool     `protobuf:"varint,26,opt,name=FieldZ,proto3" json:"FieldZ,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NestedRandomV1) Reset()         { *m = NestedRandomV1{} }
func (m *NestedRandomV1) String() string { return proto.CompactTextString(m) }
func (*NestedRandomV1) ProtoMessage()    {}
func (*NestedRandomV1) Descriptor() ([]byte, []int) {
	return fileDescriptor_9e762851f95667d1, []int{3}
}

func (m *NestedRandomV1) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NestedRandomV1.Unmarshal(m, b)
}
func (m *NestedRandomV1) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NestedRandomV1.Marshal(b, m, deterministic)
}
func (m *NestedRandomV1) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NestedRandomV1.Merge(m, src)
}
func (m *NestedRandomV1) XXX_Size() int {
	return xxx_messageInfo_NestedRandomV1.Size(m)
}
func (m *NestedRandomV1) XXX_DiscardUnknown() {
	xxx_messageInfo_NestedRandomV1.DiscardUnknown(m)
}

var xxx_messageInfo_NestedRandomV1 proto.InternalMessageInfo

func (m *NestedRandomV1) GetFieldA() string {
	if m != nil {
		return m.FieldA
	}
	return ""
}

func (m *NestedRandomV1) GetFieldB() string {
	if m != nil {
		return m.FieldB
	}
	return ""
}

func (m *NestedRandomV1) GetFieldC() string {
	if m != nil {
		return m.FieldC
	}
	return ""
}

func (m *NestedRandomV1) GetFieldD() string {
	if m != nil {
		return m.FieldD
	}
	return ""
}

func (m *NestedRandomV1) GetFieldE() string {
	if m != nil {
		return m.FieldE
	}
	return ""
}

func (m *NestedRandomV1) GetFieldF() string {
	if m != nil {
		return m.FieldF
	}
	return ""
}

func (m *NestedRandomV1) GetFielG() float64 {
	if m != nil {
		return m.FielG
	}
	return 0
}

func (m *NestedRandomV1) GetFieldH() float64 {
	if m != nil {
		return m.FieldH
	}
	return 0
}

func (m *NestedRandomV1) GetFieldI() float64 {
	if m != nil {
		return m.FieldI
	}
	return 0
}

func (m *NestedRandomV1) GetFieldJ() float64 {
	if m != nil {
		return m.FieldJ
	}
	return 0
}

func (m *NestedRandomV1) GetFieldK() float64 {
	if m != nil {
		return m.FieldK
	}
	return 0
}

func (m *NestedRandomV1) GetFieldL() float64 {
	if m != nil {
		return m.FieldL
	}
	return 0
}

func (m *NestedRandomV1) GetFieldM() string {
	if m != nil {
		return m.FieldM
	}
	return ""
}

func (m *NestedRandomV1) GetFieldN() string {
	if m != nil {
		return m.FieldN
	}
	return ""
}

func (m *NestedRandomV1) GetFieldO() string {
	if m != nil {
		return m.FieldO
	}
	return ""
}

func (m *NestedRandomV1) GetFieldP() string {
	if m != nil {
		return m.FieldP
	}
	return ""
}

func (m *NestedRandomV1) GetFieldQ() int64 {
	if m != nil {
		return m.FieldQ
	}
	return 0
}

func (m *NestedRandomV1) GetFieldR() int64 {
	if m != nil {
		return m.FieldR
	}
	return 0
}

func (m *NestedRandomV1) GetFieldS() int64 {
	if m != nil {
		return m.FieldS
	}
	return 0
}

func (m *NestedRandomV1) GetFieldT() int64 {
	if m != nil {
		return m.FieldT
	}
	return 0
}

func (m *NestedRandomV1) GetFieldU() string {
	if m != nil {
		return m.FieldU
	}
	return ""
}

func (m *NestedRandomV1) GetFieldV() string {
	if m != nil {
		return m.FieldV
	}
	return ""
}

func (m *NestedRandomV1) GetFieldW() string {
	if m != nil {
		return m.FieldW
	}
	return ""
}

func (m *NestedRandomV1) GetFieldX() string {
	if m != nil {
		return m.FieldX
	}
	return ""
}

func (m *NestedRandomV1) GetFieldY() bool {
	if m != nil {
		return m.FieldY
	}
	return false
}

func (m *NestedRandomV1) GetFieldZ() bool {
	if m != nil {
		return m.FieldZ
	}
	return false
}

func init() {
	proto.RegisterEnum("protobench.TypeV1", TypeV1_name, TypeV1_value)
	proto.RegisterType((*GoV1)(nil), "protobench.GoV1")
	proto.RegisterType((*AddressV1)(nil), "protobench.AddressV1")
	proto.RegisterType((*RandomV1)(nil), "protobench.RandomV1")
	proto.RegisterType((*NestedRandomV1)(nil), "protobench.NestedRandomV1")
}

func init() {
	proto.RegisterFile("structdef-go-v1.proto", fileDescriptor_9e762851f95667d1)
}

var fileDescriptor_9e762851f95667d1 = []byte{
	// 706 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xcc, 0x95, 0xcb, 0x4e, 0xdb, 0x4a,
	0x18, 0xc7, 0x19, 0x72, 0xc1, 0x1e, 0x2e, 0x27, 0x67, 0x0e, 0x70, 0x06, 0xba, 0xb1, 0xb2, 0xa8,
	0x2c, 0x04, 0x41, 0xa1, 0xcb, 0x56, 0xaa, 0x08, 0x49, 0x20, 0x5c, 0x42, 0x3a, 0x09, 0xe6, 0xb2,
	0x89, 0x92, 0x78, 0x20, 0x96, 0x12, 0x4f, 0x64, 0x3b, 0xa8, 0x79, 0x97, 0xbe, 0x48, 0x5f, 0xa1,
	0x0f, 0x55, 0x55, 0x1e, 0xdb, 0x5f, 0xa6, 0x52, 0x47, 0xdd, 0x74, 0xd1, 0x15, 0xf3, 0xff, 0xcd,
	0x67, 0xcf, 0xe7, 0xf9, 0x7e, 0x28, 0x78, 0x27, 0x8c, 0x82, 0xf9, 0x28, 0x72, 0xf9, 0xf3, 0xd1,
	0x8b, 0x38, 0x7a, 0xad, 0x56, 0x66, 0x81, 0x88, 0x04, 0xc1, 0xf2, 0xcf, 0x90, 0xfb, 0xa3, 0x71,
	0xf9, 0xdb, 0x2a, 0xce, 0x9f, 0x0b, 0xa7, 0x4a, 0x08, 0xce, 0xfb, 0x83, 0x29, 0xa7, 0xc8, 0x42,
	0xb6, 0xc9, 0xe4, 0x9a, 0xec, 0x63, 0x63, 0xe8, 0x05, 0xd1, 0xb8, 0x3e, 0x58, 0xd0, 0x55, 0x0b,
	0xd9, 0x39, 0x06, 0x99, 0x6c, 0xe3, 0xc2, 0x6c, 0x2c, 0x7c, 0x4e, 0x73, 0xf2, 0x81, 0x24, 0xc4,
	0x4f, 0x84, 0xde, 0x70, 0xe2, 0xf9, 0x2f, 0x21, 0xcd, 0x5b, 0xc8, 0x2e, 0x30, 0xc8, 0x64, 0x17,
	0x17, 0xc3, 0x99, 0x98, 0x87, 0x9c, 0x16, 0x2c, 0x64, 0x1b, 0x2c, 0x4d, 0xf1, 0x9b, 0xa6, 0xc2,
	0xe7, 0x0b, 0x5a, 0xb4, 0x90, 0x8d, 0x58, 0x12, 0xc8, 0x5b, 0x9c, 0x8f, 0x16, 0x33, 0x4e, 0xd7,
	0x2c, 0x64, 0x6f, 0x9d, 0x90, 0xca, 0xb2, 0xe7, 0x4a, 0x6f, 0x31, 0xe3, 0x4e, 0x95, 0xc9, 0x7d,
	0xb2, 0x87, 0xd7, 0x5e, 0x07, 0x93, 0x39, 0xef, 0x87, 0xd4, 0x88, 0x3b, 0xb9, 0x58, 0x61, 0x45,
	0x09, 0xba, 0xcb, 0x2d, 0x8f, 0x9a, 0x71, 0x2f, 0xb0, 0xd5, 0x5a, 0x6e, 0xb9, 0x14, 0xc7, 0xa7,
	0xc2, 0x56, 0x9d, 0x1c, 0xe3, 0xb5, 0x53, 0xd7, 0x0d, 0x78, 0x18, 0xd2, 0x75, 0x0b, 0xd9, 0xeb,
	0x27, 0x3b, 0xea, 0xd9, 0xe9, 0x96, 0x53, 0x65, 0x59, 0x55, 0xcd, 0xc0, 0xc9, 0xa3, 0x61, 0xf9,
	0x0b, 0xc2, 0x26, 0x14, 0xc8, 0xef, 0x8d, 0x02, 0xce, 0xa3, 0xf4, 0x4e, 0xd3, 0x14, 0x73, 0x7f,
	0x3e, 0x1d, 0xf2, 0x40, 0xde, 0x69, 0x81, 0xa5, 0x89, 0xbc, 0xc1, 0xe6, 0x4c, 0x84, 0x51, 0x7f,
	0x24, 0xdc, 0xe4, 0x56, 0x0b, 0xcc, 0x88, 0xc1, 0x99, 0x70, 0xe5, 0x25, 0x3d, 0x4f, 0x84, 0x08,
	0xd2, 0x5b, 0x4d, 0x02, 0x39, 0xc4, 0xc5, 0x60, 0xe0, 0xbb, 0x62, 0x2a, 0xaf, 0x74, 0xfd, 0x64,
	0x5b, 0x6d, 0x95, 0xc9, 0x1d, 0xa7, 0xca, 0xd2, 0x9a, 0xf2, 0xd7, 0x02, 0x36, 0x32, 0x18, 0x77,
	0xd1, 0xf4, 0xf8, 0xc4, 0x3d, 0xcd, 0xba, 0x4b, 0x12, 0xf0, 0x9a, 0xec, 0x2e, 0xe3, 0x35, 0xe0,
	0x67, 0xe9, 0xc0, 0xd3, 0x04, 0xbc, 0x2e, 0x3b, 0xcb, 0x78, 0x1d, 0x78, 0x43, 0xb6, 0x96, 0xf1,
	0x06, 0xf0, 0xa6, 0x1c, 0x77, 0xc6, 0x9b, 0xf1, 0x07, 0xc6, 0xab, 0x73, 0x39, 0x70, 0x93, 0x25,
	0x01, 0xaa, 0x2f, 0x92, 0xe1, 0xa6, 0xd5, 0x17, 0xc0, 0x5b, 0x72, 0xb2, 0x19, 0x6f, 0x01, 0xbf,
	0x94, 0x63, 0xcd, 0xf8, 0x25, 0xf0, 0x2b, 0x39, 0xd3, 0x5c, 0xca, 0xaf, 0x80, 0x5f, 0xd3, 0x0d,
	0x85, 0x5f, 0x03, 0xbf, 0xa1, 0x9b, 0x0a, 0xbf, 0x01, 0xde, 0xa6, 0x5b, 0x0a, 0x6f, 0x03, 0xbf,
	0xa5, 0xff, 0x28, 0xe7, 0xde, 0x02, 0xef, 0xd0, 0x92, 0xc2, 0x3b, 0xc0, 0x3f, 0xd1, 0x7f, 0x13,
	0x07, 0x92, 0x04, 0x9c, 0x51, 0xa2, 0xd4, 0x33, 0xe0, 0x5d, 0xfa, 0x9f, 0xc2, 0xbb, 0xc0, 0x7b,
	0x74, 0x5b, 0xe1, 0x3d, 0xe0, 0x77, 0x74, 0x47, 0x79, 0xff, 0x1d, 0x70, 0x87, 0xee, 0x2a, 0xdc,
	0x01, 0x7e, 0x4f, 0xff, 0x57, 0xf8, 0x3d, 0xf0, 0x07, 0x4a, 0x15, 0xfe, 0x00, 0xfc, 0x91, 0xee,
	0x29, 0xe7, 0x3e, 0x02, 0x7f, 0xa2, 0xfb, 0xc9, 0xff, 0x78, 0x92, 0xc8, 0x47, 0xbc, 0xe9, 0xf3,
	0x30, 0xe2, 0x6e, 0x3f, 0xf5, 0xb5, 0x2c, 0x7d, 0xdd, 0x57, 0x7d, 0x6d, 0xcb, 0x02, 0xb0, 0x76,
	0xc3, 0x57, 0x72, 0xf9, 0x7b, 0x1e, 0x6f, 0xfd, 0x5c, 0xf0, 0x77, 0x1b, 0x8c, 0x7e, 0x6d, 0x30,
	0xd2, 0x18, 0x8c, 0x34, 0x06, 0x23, 0x8d, 0xc1, 0x48, 0x63, 0x30, 0xd2, 0x18, 0x6c, 0x6a, 0x0c,
	0x36, 0xff, 0x90, 0xc1, 0x39, 0x8d, 0xc1, 0x39, 0x8d, 0xc1, 0x39, 0x8d, 0xc1, 0x39, 0x8d, 0xc1,
	0xa6, 0xc6, 0x60, 0x53, 0x63, 0xb0, 0xa9, 0x31, 0xd8, 0xd4, 0x18, 0x6c, 0xfc, 0xce, 0xe0, 0x83,
	0x0f, 0xb8, 0x98, 0xfc, 0xee, 0x90, 0x5d, 0x4c, 0x7a, 0x8f, 0x9d, 0x86, 0x53, 0xed, 0xdf, 0xb5,
	0xbb, 0x9d, 0xc6, 0x59, 0xab, 0xd9, 0x6a, 0xd4, 0x4b, 0x2b, 0x64, 0x03, 0x1b, 0x29, 0x67, 0x25,
	0xa4, 0xa4, 0x6e, 0x69, 0xb5, 0x76, 0xf8, 0x74, 0xf0, 0xe2, 0x45, 0xe3, 0xf9, 0xb0, 0x32, 0x12,
	0xd3, 0xe3, 0xc1, 0x84, 0x7f, 0x0e, 0xc7, 0x91, 0xe7, 0x1f, 0x2f, 0xf5, 0x7f, 0xbf, 0x5c, 0x0e,
	0x8b, 0x72, 0xfd, 0xee, 0x47, 0x00, 0x00, 0x00, 0xff, 0xff, 0xbe, 0xde, 0x7a, 0x5c, 0xc0, 0x07,
	0x00, 0x00,
}
